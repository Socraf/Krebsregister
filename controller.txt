class /KAP/KR_CL_CONTROLLER definition
  public
  inheriting from /KAP/CL_GUI_HANDLER
  create public .

public section.

  data GR_MODEL type ref to /KAP/KR_CL_MODEL .

  methods CONSTRUCTOR
    importing
      !IR_OWNER type ref to /KAP/CL_OBJECT optional .
  methods GET_VIEW
    returning
      value(RR_VIEW) type ref to /KAP/KR_CL_VIEW .
  methods GET_MODEL
    returning
      value(RR_MODEL) type ref to /KAP/KR_CL_MODEL .

  methods FREE
    redefinition .
  PROTECTED SECTION.

    METHODS handle_on_event
        FOR EVENT on_event OF /kap/kr_cl_view
      IMPORTING
        action
        frame
        getdata
        postdata
        query_table
        sender.

    METHODS handle_on_fcode
        FOR EVENT on_function_code OF /kap/kr_cl_view
      IMPORTING
        !fcode .

    METHODS create_content_area
        REDEFINITION .
private section.

  data GR_VIEW type ref to /KAP/KR_CL_VIEW .

  methods INIT .
  methods OPEN_KRD_DOCUMENT
    importing
      !IT_QUERY type CNHT_QUERY_TABLE
    raising
      CX_DYNAMIC_CHECK .
ENDCLASS.



CLASS /KAP/KR_CL_CONTROLLER IMPLEMENTATION.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method /KAP/KR_CL_CONTROLLER->CONSTRUCTOR
* +-------------------------------------------------------------------------------------------------+
* | [--->] IR_OWNER                       TYPE REF TO /KAP/CL_OBJECT(optional)
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD CONSTRUCTOR.

    super->constructor( ir_owner =  ir_owner ).

    init( ).

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method /KAP/KR_CL_CONTROLLER->CREATE_CONTENT_AREA
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD CREATE_CONTENT_AREA.
*==============================================================================
* Erstellt den Anzeigebereich für die Anwendung. Dazu gehört eine Sicht-Instanz
* und die Registrierung von Ereignissen, die durch den View ausgelöst werden.
*
* Params:
*   Keine
*
*   Initialimplementierung
*==============================================================================

    TRY .

        "View-Instanz erzeugen
        IF gr_view IS NOT BOUND.

          CREATE OBJECT gr_view
            EXPORTING
              ir_item      = gr_model
              ir_container = gr_screen.

        ENDIF.

        "View darstellen
        gr_view->run( ).

        " Ereignisse registrieren
        SET HANDLER handle_on_fcode FOR gr_view.

        "HTML Ereignis bearbeiten SAPEVENT
        SET HANDLER me->handle_on_event FOR gr_view.

      CATCH cx_dynamic_check INTO exception.

        log_exception( ).

    ENDTRY.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method /KAP/KR_CL_CONTROLLER->FREE
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD FREE.
*==============================================================================
* Gibt die Instanz und alle eigenen Objektrefrenzen frei.
*
* Params:
*   Keine
*
*   Initialimplementierung
*==============================================================================

    TRY.

        IF gr_model IS BOUND.

          gr_model->free( ).

        ENDIF.

        CLEAR:  gr_model, gr_view.

        " Oberklassenattribute freigeben
        super->free( ).

      CATCH cx_dynamic_check INTO exception.

        log_exception( ).

    ENDTRY.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method /KAP/KR_CL_CONTROLLER->GET_MODEL
* +-------------------------------------------------------------------------------------------------+
* | [<-()] RR_MODEL                       TYPE REF TO /KAP/KR_CL_MODEL
* +--------------------------------------------------------------------------------------</SIGNATURE>
  method GET_MODEL.
  endmethod.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Public Method /KAP/KR_CL_CONTROLLER->GET_VIEW
* +-------------------------------------------------------------------------------------------------+
* | [<-()] RR_VIEW                        TYPE REF TO /KAP/KR_CL_VIEW
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD GET_VIEW.

    rr_view = me->gr_view.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method /KAP/KR_CL_CONTROLLER->HANDLE_ON_EVENT
* +-------------------------------------------------------------------------------------------------+
* | [--->] ACTION                         LIKE
* | [--->] FRAME                          LIKE
* | [--->] GETDATA                        LIKE
* | [--->] POSTDATA                       LIKE
* | [--->] QUERY_TABLE                    LIKE
* | [--->] SENDER                         LIKE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD handle_on_event.

    CASE action.

      WHEN 'ON_START'.

        "Bei der Drucktaste "SUCHEN - BTN_SEARCH_PAT" wird die Patientenlist ermitteln und mögliche Eingabefehler mittels eines Pop-up-Fensters zeigen.
        me->gr_model->get_t_patient_list(
        EXPORTING
            it_query =  query_table  " Query Table
            ir_view  =  me->gr_view  " Krebsregister - View
        ).

        "Bei der Drucktaste "AUSFÜHREN - BTN_OPEN_KR" wird das Vorhandensein einer Patientennummer ermitteln ( Model ).
        "- Wenn die Patientennummer nicht vorhanden ist, dann Fehlermeldung ausgeben (Pop-up-Fenster View)
        "- Wenn die Patientennummer vorhanden ist, dann:
        "    - diese Nummer mit der Einrichtung überprüfen und die Html-Seite für das Register laden ( View )

        me->gr_model->check_patient_number(
        EXPORTING
            it_query =  query_table  " Query Table
            ir_view  =  me->gr_view  " Krebsregister - View
        ).

        "Startet die Steuerung des Programmablaufs. Nach Prüfung, ob das Programm
        "bereits gestartet wurde, werden das Hauptfenster und der Anzeigebereich
        "erzeugt und abschließend die geerbte Methode aufgerufen.
        me->run( ).

      WHEN 'ON_BACK_TO_START'.

        gr_view->set_cancer_registry( ' ' ).

        gr_view->update( ).

        me->run( ).

      WHEN 'ON_CLEAR_FIELDS'.

        gr_view->clear_cancer_registry_data( ).

        gr_view->update( ).

        me->run( ).

      WHEN 'ON_NEW_ICD'.

        IF gr_model->check_icd_input(
           EXPORTING
             it_query =  query_table                " Query Table
             ir_view  =  me->gr_view                " Krebsregister - View
         ) EQ 0.

          "Update ICD-Code und Bezeichner (View - GS_KREBSREGISTER: DKEY1, DKAT1, DTEXT1, DIALO, DIADT )
          gr_view->update_icd_cancer_registry( query_table  ).

          "Update Krebsregisterdaten (Model)
          gr_model->set_s_cancer_registry( gr_view->get_cancer_registry_data( )  ).

          "Daten in der Tabelle /KAP/KR_KREBSREG einfügen/insert
          IF gr_model->insert_cancer_registry_data(
          EXPORTING
            it_query =  query_table                " Query Table
            ir_view  =  me->gr_view                " Krebsregister - View
             ) EQ 0.

          ENDIF.

          "Überprüfen ob der Patient schon Dokumenten hat, um den unteren Block zu laden

          gr_view->update( ).

          me->run( ).

        ENDIF.

      WHEN 'ON_OPEN_KRD'.

        me->open_krd_document( query_table ).

      WHEN OTHERS.

    ENDCASE.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Protected Method /KAP/KR_CL_CONTROLLER->HANDLE_ON_FCODE
* +-------------------------------------------------------------------------------------------------+
* | [--->] FCODE                          LIKE
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD HANDLE_ON_FCODE.
*==============================================================================
* Verarbeitet ein Funktionscode-Ereignis. Transaktionsaufrufe sind immer mit
* dem Zusatz WITH AUTHORITY-CHECK auszuführen.
*
* Params:
*   fcode   val[syucomm]   - Funktionscode
*
*   Initialimplementierung
*==============================================================================
*    TRY .
*        CASE fcode.
*
*          WHEN 'BACK' OR 'EXIT'.
*
*          WHEN 'CANCEL'.
*
*            set_exec_code( ).
*
*        ENDCASE.
*
*      CATCH cx_dynamic_check INTO exception.
*
*        log_exception( ).
*
*    ENDTRY.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method /KAP/KR_CL_CONTROLLER->INIT
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD INIT.
*==============================================================================
* Initialisiert alle eigenen Attribute.
*
* Params:
*   Keine
*
*   Initialimplementierung
*==============================================================================

    IF gr_model IS NOT BOUND.

      CREATE OBJECT gr_model
        EXPORTING
          ir_owner = me.

    ELSE.

      gr_model->reset( ).

    ENDIF.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Instance Private Method /KAP/KR_CL_CONTROLLER->OPEN_KRD_DOCUMENT
* +-------------------------------------------------------------------------------------------------+
* | [--->] IT_QUERY                       TYPE        CNHT_QUERY_TABLE
* | [!CX!] CX_DYNAMIC_CHECK
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD open_krd_document.

    DATA: ls_query     TYPE w3query,
          lt_ndoc_call TYPE ishmed_t_ndoc,
          l_tcode      TYPE sy-tcode,
          ls_ndoc      TYPE ndoc,
          lr_exception TYPE REF TO cx_dynamic_check.

    "Get Einrichtung
    READ TABLE it_query INTO ls_query WITH KEY name = 'EINRI'.

    IF sy-subrc EQ 0.

      ls_ndoc-einri = ls_query-value.

    ENDIF.

    "Get Dokumentart
    READ TABLE it_query INTO ls_query WITH KEY name = 'DOKAR'.

    IF sy-subrc EQ 0.

      ls_ndoc-dokar = ls_query-value.

    ENDIF.

    "Get Dokumentnummer
    READ TABLE it_query INTO ls_query WITH KEY name = 'DOKNR'.

    IF sy-subrc EQ 0.

      ls_ndoc-doknr = ls_query-value.

    ENDIF.

    "Get Dokumentversion
    READ TABLE it_query INTO ls_query WITH KEY name = 'DOKVR'.

    IF sy-subrc EQ 0.

      ls_ndoc-dokvr = ls_query-value.

    ENDIF.

    "Get Teildokument
    READ TABLE it_query INTO ls_query WITH KEY name = 'DOKTL'.

    IF sy-subrc EQ 0.

      ls_ndoc-doktl = ls_query-value.

    ENDIF.

    APPEND ls_ndoc TO lt_ndoc_call.

    l_tcode = 'N202'.

    TRY.

        CALL FUNCTION 'ISH_N2_MEDICAL_DOCUMENT'
          EXPORTING
            ss_einri    = ls_ndoc-einri
            ss_tcode    = l_tcode
          TABLES
            ss_ndoc     = lt_ndoc_call
          EXCEPTIONS
            no_document = 1
            no_insert   = 2
            cancel      = 3
            OTHERS      = 4.
        IF sy-subrc NE 0.

        ENDIF.

      CATCH cx_dynamic_check INTO lr_exception.

    ENDTRY.

  ENDMETHOD.
ENDCLASS.